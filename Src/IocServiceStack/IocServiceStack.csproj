<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyTitle>IocServiceStack</AssemblyTitle>
    <VersionPrefix>2.0.4</VersionPrefix>
    <TargetFrameworks>net46;netstandard2.0;netstandard1.6</TargetFrameworks>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <AssemblyName>IocServiceStack</AssemblyName>
    <AssemblyOriginatorKeyFile>../../tools/servicerouter.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <PublicSign Condition=" '$(OS)' != 'Windows_NT' ">true</PublicSign>
    <PackageId>IocServiceStack</PackageId>
    <PackageTags>DependencyInjection;IoC;IocServiecStack</PackageTags>
    <PackageProjectUrl>https://github.com/rjinaga/IocServiceStack</PackageProjectUrl>
    <NetStandardImplicitPackageVersion Condition=" '$(TargetFramework)' == 'netstandard1.6' ">1.6.0</NetStandardImplicitPackageVersion>
    <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>
    <GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>
    <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>
    <GenerateAssemblyCopyrightAttribute>false</GenerateAssemblyCopyrightAttribute>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Version>2.0.6</Version>
    <PackageReleaseNotes>Supports .NET Standard 2.0</PackageReleaseNotes>
    <Description>IocServiceStack is a open source .NET dependency injection framework. It supports multi-service communication through multi-level dependency injection. This clearly separates the concerns of application layers, and makes the layers configurable and it offers several ways to inject dependencies. Check out http://www.iocservicestack.net for more information.</Description>
    <Authors>rjinaga</Authors>
    <RepositoryUrl>https://github.com/rjinaga/IocServiceStack</RepositoryUrl>
  </PropertyGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net46' ">
    <Reference Include="System" />
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>

  <Target Name="PostcompileScript" AfterTargets="Build" Condition=" '$(IsCrossTargetingBuild)' != 'true' ">
    <Exec Command="dotnet pack --no-build --configuration $(Configuration)" />
  </Target>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.6' ">
    <PackageReference Include="System.Reflection" Version="4.3.0" />
    <PackageReference Include="System.Reflection.Extensions" Version="4.3.0" />
    <PackageReference Include="System.Reflection.TypeExtensions" Version="4.3.0" />
  </ItemGroup>

</Project>
